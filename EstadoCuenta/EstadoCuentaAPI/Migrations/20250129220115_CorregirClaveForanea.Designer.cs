// <auto-generated />
using System;
using EstadoCuentaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstadoCuentaAPI.Migrations
{
    [DbContext(typeof(EstadoCuentaDbContext))]
    [Migration("20250129220115_CorregirClaveForanea")]
    partial class CorregirClaveForanea
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EstadoCuentaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"), 1L, 1);

                    b.Property<string>("NoTarjetaCredito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EstadoCuentaAPI.Models.EstadoCuenta", b =>
                {
                    b.Property<int>("EstadoCuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoCuentaID"), 1L, 1);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<decimal>("CuotaMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InteresBonificable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotalPagar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentajeConfigurableSaldoMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentajeInteresBonificable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EstadoCuentaID");

                    b.HasIndex("ClienteID")
                        .IsUnique();

                    b.ToTable("EstadosCuenta");
                });

            modelBuilder.Entity("EstadoCuentaAPI.Models.Movimiento", b =>
                {
                    b.Property<int>("MovimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientoID"), 1L, 1);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovimientoID");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("EstadoCuentaAPI.Models.EstadoCuenta", b =>
                {
                    b.HasOne("EstadoCuentaAPI.Models.Cliente", "Cliente")
                        .WithOne("EstadoCuenta")
                        .HasForeignKey("EstadoCuentaAPI.Models.EstadoCuenta", "ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EstadoCuentaAPI.Models.Cliente", b =>
                {
                    b.Navigation("EstadoCuenta")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
